!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module){var config={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"turn:turnserver.quickblox.com:3478?transport=udp",username:"",credential:""},{urls:"turn:turnserver.quickblox.com:3478?transport=tcp",username:"",credential:""}]};module.exports=config},{}],2:[function(require,module){function QBVideoChatSignaling(chatService,params){var self=this;params&&(this._debug=params.debug||null,this._callbacks={onCallCallback:params.onCallCallback||null,onAcceptCallback:params.onAcceptCallback||null,onRejectCallback:params.onRejectCallback||null,onStopCallback:params.onStopCallback||null,onInnerAcceptCallback:null,onCandidateCallback:null}),this._onMessage=function(msg){var author,type,body,qbID,sessionID,name,avatar;switch(author=$(msg).attr("from"),type=$(msg).attr("type"),body=$(msg).find("body")[0].textContent,sessionID=$(msg).find("session")[0].textContent,name=$(msg).find("full_name")[0].textContent,avatar=$(msg).find("avatar")[0]&&$(msg).find("avatar")[0].textContent,qbID=QBChatHelpers.getIDFromNode(author),type){case QBSignalingType.CALL:traceS("onCall from "+qbID),self._callbacks.onCallCallback(qbID,body,sessionID,name,avatar);break;case QBSignalingType.ACCEPT:traceS("onAccept from "+qbID),self._callbacks.onAcceptCallback(qbID),self._callbacks.onInnerAcceptCallback(body);break;case QBSignalingType.REJECT:traceS("onReject from "+qbID),self._callbacks.onRejectCallback(qbID);break;case QBSignalingType.STOP:traceS("onStop from "+qbID),self._callbacks.onStopCallback(qbID,body);break;case QBSignalingType.CANDIDATE:self._callbacks.onCandidateCallback(body)}return!0},this._sendMessage=function(userID,signalingType,data,sessionID,userName,userAvatar,callType){var reply,params,opponentJID=QBChatHelpers.getJID(userID);params={to:opponentJID,from:chatService._connection.jid,type:signalingType},reply=$msg(params).c("body").t(data).up().c("extraParams").c("session").t(sessionID).up().c("full_name").t(userName).up(),userAvatar&&reply.c("avatar").t(userAvatar).up(),callType&&reply.c("callType").t(callType),chatService._connection.send(reply)},$(Object.keys(QBSignalingType)).each(function(){chatService._connection.addHandler(self._onMessage,null,"message",QBSignalingType[this])})}function traceS(text){console.log("[qb_videochat_signalling]: "+text)}module.exports=QBVideoChatSignaling;var QBSignalingType={CALL:"qbvideochat_call",ACCEPT:"qbvideochat_acceptCall",REJECT:"qbvideochat_rejectCall",STOP:"qbvideochat_stopCall",CANDIDATE:"qbvideochat_candidate"},QBCallType={VIDEO_AUDIO:"VIDEO_AUDIO",AUDIO:"AUDIO"};QBVideoChatSignaling.prototype.call=function(userID,sessionDescription,sessionID,userName,userAvatar){traceS("call to "+userID),this._sendMessage(userID,QBSignalingType.CALL,sessionDescription,sessionID,userName,userAvatar,QBCallType.VIDEO_AUDIO)},QBVideoChatSignaling.prototype.accept=function(userID,sessionDescription,sessionID,userName){traceS("accept "+userID),this._sendMessage(userID,QBSignalingType.ACCEPT,sessionDescription,sessionID,userName)},QBVideoChatSignaling.prototype.reject=function(userID,sessionID,userName){traceS("reject "+userID),this._sendMessage(userID,QBSignalingType.REJECT,null,sessionID,userName)},QBVideoChatSignaling.prototype.stop=function(userID,reason,sessionID,userName){traceS("stop "+userID),this._sendMessage(userID,QBSignalingType.STOP,reason,sessionID,userName)},QBVideoChatSignaling.prototype.sendCandidate=function(userID,candidate,sessionID,userName){this._sendMessage(userID,QBSignalingType.CANDIDATE,candidate,sessionID,userName)}},{}],3:[function(require){function QBVideoChat(signaling,params){var self=this;this.version="0.4.2",this._state=QBVideoChatState.INACTIVE,this._candidatesQueue=[],this.localStreamElement=null,this.remoteStreamElement=null,params&&(this._debug=params.debug||null,this.sessionID=parseInt(params.sessionID||(new Date).getTime()),this.remoteSessionDescription=params.sessionDescription||null,this.constraints=params.constraints||null,traceVC("sessionID "+this.sessionID),this._callbacks={onGetUserMediaSuccess:params.onGetUserMediaSuccess||null,onGetUserMediaError:params.onGetUserMediaError||null}),this.onAcceptSignalingCallback=function(sessionDescription){self.setRemoteDescription(sessionDescription,"answer")},this.addCandidate=function(data){var jsonCandidate,candidate;jsonCandidate=self._xmppTextToDictionary(data),candidate=new adapter.RTCIceCandidate(jsonCandidate),self.pc.addIceCandidate(candidate)},this.signaling=signaling,this.signaling.onInnerAcceptCallback=this.onAcceptSignalingCallback,this.signaling.onCandidateCallback=this.addCandidate,this.getUserMedia=function(){function successCallback(localMediaStream){traceVC("getUserMedia success"),self.localStream=localMediaStream,self._callbacks.onGetUserMediaSuccess(),self.createRTCPeerConnection()}function errorCallback(error){traceVC("getUserMedia error: "+JSON.stringify(error)),self._callbacks.onGetUserMediaError()}traceVC("getUserMedia..."),adapter.getUserMedia(self.constraints,successCallback,errorCallback)},this.attachMediaStream=function(elem,stream){adapter.attachMediaStream(elem,stream)},this.reattachMediaStream=function(to,from){adapter.reattachMediaStream(to,from)},this.createRTCPeerConnection=function(){traceVC("RTCPeerConnection...");try{self.pc=new adapter.RTCPeerConnection(pcConfig,PC_CONSTRAINTS),self.pc.addStream(self.localStream),self.pc.onicecandidate=self.onIceCandidateCallback,self.pc.onaddstream=self.onRemoteStreamAddedCallback,traceVC("RTCPeerConnnection created")}catch(e){traceVC("RTCPeerConnection failed: "+e.message)}},this.onIceCandidateCallback=function(event){var iceData,iceDataAsmessage,candidate=event.candidate;candidate&&(iceData={sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate,sdpMid:candidate.sdpMid},iceDataAsmessage=self._xmppDictionaryToText(iceData),console.log(iceDataAsmessage),self._state==QBVideoChatState.INACTIVE?self._candidatesQueue.push(iceDataAsmessage):self.signaling.sendCandidate(self.opponentID,iceDataAsmessage,self.sessionID,self.opponentUsername))},this.onRemoteStreamAddedCallback=function(event){traceVC("Remote stream added"),self.remoteStream=event.stream,self.attachMediaStream(self.remoteStreamElement,event.stream)},this.onGetSessionDescriptionSuccessCallback=function(sessionDescription){traceVC("LocalDescription..."),self.pc.setLocalDescription(sessionDescription,function(){traceVC("LocalDescription success"),self.localSessionDescription=sessionDescription,"offer"===sessionDescription.type?self.sendCallRequest():"answer"===sessionDescription.type&&self.sendAceptRequest()},function(error){traceVC("LocalDescription error: "+JSON.stringify(error))})},this.onCreateOfferFailureCallback=function(error){traceVC("createOffer() error: "+JSON.stringify(error))},this.setRemoteDescription=function(descriptionSDP,descriptionType){traceVC("RemoteDescription...");var sessionDescription,candidate;self._state=QBVideoChatState.ESTABLISHING,sessionDescription=new adapter.RTCSessionDescription({sdp:descriptionSDP,type:descriptionType}),self.pc.setRemoteDescription(sessionDescription,function(){traceVC("RemoteDescription success"),"offer"===sessionDescription.type&&self.pc.createAnswer(self.onGetSessionDescriptionSuccessCallback,self.onCreateAnswerFailureCallback,SDP_CONSTRAINTS)},function(error){traceVC("RemoteDescription error: "+JSON.stringify(error))});for(var i=0;i<self._candidatesQueue.length;i++)candidate=self._candidatesQueue.pop(),self.signaling.sendCandidate(self.opponentID,candidate,self.sessionID,self.opponentUsername)},this.onCreateAnswerFailureCallback=function(error){traceVC("createAnswer() error: "+JSON.stringify(error))},this.sendCallRequest=function(){self.signaling.call(self.opponentID,self.localSessionDescription.sdp,self.sessionID,self.opponentUsername,self.opponentAvatar)},this.sendAceptRequest=function(){self.signaling.accept(self.opponentID,self.localSessionDescription.sdp,self.sessionID,self.opponentUsername)},this.hangup=function(){self._state=QBVideoChatState.INACTIVE,self.signaling=null,self.localStream.stop(),self.pc.close(),self.pc=null},this._xmppTextToDictionary=function(data){return $.parseJSON(QBChatHelpers.xmlunescape(data))},this._xmppDictionaryToText=function(data){return JSON.stringify(data)}}function traceVC(text){console.log("[qb_videochat]: "+text)}var adapter=require("../libs/adapter"),pcConfig=require("./config"),QBVideoChatSignaling=require("./qbSignalling");window.QBVideoChat=QBVideoChat,window.QBVideoChatSignaling=QBVideoChatSignaling;var PC_CONSTRAINTS={optional:[]},SDP_CONSTRAINTS={optional:[],mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},QBVideoChatState={INACTIVE:"inactive",ESTABLISHING:"establishing"};QBVideoChat.prototype.call=function(userID,userName,userAvatar){this.localSessionDescription?this.sendCallRequest():(this.opponentID=userID,this.opponentUsername=userName,this.opponentAvatar=userAvatar,this.pc.createOffer(this.onGetSessionDescriptionSuccessCallback,this.onCreateOfferFailureCallback,SDP_CONSTRAINTS))},QBVideoChat.prototype.accept=function(userID,userName){this.opponentID=userID,this.opponentUsername=userName,this.setRemoteDescription(this.remoteSessionDescription,"offer")},QBVideoChat.prototype.reject=function(userID,userName){this.signaling.reject(userID,this.sessionID,userName)},QBVideoChat.prototype.stop=function(userID,userName){this.signaling.stop(userID,"manual",this.sessionID,userName)}},{"../libs/adapter":4,"./config":1,"./qbSignalling":2}],4:[function(require,module){function maybeFixConfiguration(pcConfig){if(null!=pcConfig)for(var i=0;i<pcConfig.iceServers.length;i++)pcConfig.iceServers[i].hasOwnProperty("urls")&&(pcConfig.iceServers[i].url=pcConfig.iceServers[i].urls,delete pcConfig.iceServers[i].urls)}var RTCPeerConnection=null,getUserMedia=null,attachMediaStream=null,reattachMediaStream=null,webrtcDetectedBrowser=null,webrtcDetectedVersion=null;if(navigator.mozGetUserMedia){webrtcDetectedBrowser="firefox",webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1],10);var RTCPeerConnection=function(pcConfig,pcConstraints){return maybeFixConfiguration(pcConfig),new mozRTCPeerConnection(pcConfig,pcConstraints)};RTCSessionDescription=mozRTCSessionDescription,RTCIceCandidate=mozRTCIceCandidate,getUserMedia=navigator.mozGetUserMedia.bind(navigator),navigator.getUserMedia=getUserMedia,createIceServer=function(url,username,password){var iceServer=null,url_parts=url.split(":");if(0===url_parts[0].indexOf("stun"))iceServer={url:url};else if(0===url_parts[0].indexOf("turn"))if(27>webrtcDetectedVersion){var turn_url_parts=url.split("?");(1===turn_url_parts.length||0===turn_url_parts[1].indexOf("transport=udp"))&&(iceServer={url:turn_url_parts[0],credential:password,username:username})}else iceServer={url:url,credential:password,username:username};return iceServer},createIceServers=function(urls,username,password){var iceServers=[];for(i=0;i<urls.length;i++){var iceServer=createIceServer(urls[i],username,password);null!==iceServer&&iceServers.push(iceServer)}return iceServers},attachMediaStream=function(element,stream){element.mozSrcObject=stream,element.play()},reattachMediaStream=function(to,from){to.mozSrcObject=from.mozSrcObject,to.play()},MediaStream.prototype.getVideoTracks||(MediaStream.prototype.getVideoTracks=function(){return[]}),MediaStream.prototype.getAudioTracks||(MediaStream.prototype.getAudioTracks=function(){return[]})}else if(navigator.webkitGetUserMedia){webrtcDetectedBrowser="chrome",webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2],10),createIceServer=function(url,username,password){var iceServer=null,url_parts=url.split(":");return 0===url_parts[0].indexOf("stun")?iceServer={url:url}:0===url_parts[0].indexOf("turn")&&(iceServer={url:url,credential:password,username:username}),iceServer},createIceServers=function(urls,username,password){var iceServers=[];if(webrtcDetectedVersion>=34)iceServers={urls:urls,credential:password,username:username};else for(i=0;i<urls.length;i++){var iceServer=createIceServer(urls[i],username,password);null!==iceServer&&iceServers.push(iceServer)}return iceServers};var RTCPeerConnection=function(pcConfig,pcConstraints){return 34>webrtcDetectedVersion&&maybeFixConfiguration(pcConfig),new webkitRTCPeerConnection(pcConfig,pcConstraints)};getUserMedia=navigator.webkitGetUserMedia.bind(navigator),navigator.getUserMedia=getUserMedia,attachMediaStream=function(element,stream){"undefined"!=typeof element.srcObject?element.srcObject=stream:"undefined"!=typeof element.mozSrcObject?element.mozSrcObject=stream:"undefined"!=typeof element.src?element.src=URL.createObjectURL(stream):console.log("Error attaching stream to element.")},reattachMediaStream=function(to,from){to.src=from.src}}else console.log("Browser does not appear to be WebRTC-capable");module.exports.RTCPeerConnection=RTCPeerConnection,module.exports.getUserMedia=getUserMedia,module.exports.attachMediaStream=attachMediaStream,module.exports.reattachMediaStream=reattachMediaStream,module.exports.RTCSessionDescription=RTCSessionDescription,module.exports.RTCIceCandidate=RTCIceCandidate},{}]},{},[3]);